// Code generated by protoc-gen-go from "msg.proto"
// DO NOT EDIT!

package server

import proto "goprotobuf.googlecode.com/hg/proto"
import "math"
import "os"

// Reference proto, math & os imports to suppress error if they are not otherwise used.
var _ = proto.GetString
var _ = math.Inf
var _ os.Error


type Request_Verb int32

const (
	Request_GET    = 1
	Request_SET    = 2
	Request_DEL    = 3
	Request_ESET   = 4
	Request_REV    = 5
	Request_WAIT   = 6
	Request_NOP    = 7
	Request_WATCH  = 8
	Request_WALK   = 9
	Request_CANCEL = 10
	Request_GETDIR = 14
	Request_STAT   = 16
)

var Request_Verb_name = map[int32]string{
	1:  "GET",
	2:  "SET",
	3:  "DEL",
	4:  "ESET",
	5:  "REV",
	6:  "WAIT",
	7:  "NOP",
	8:  "WATCH",
	9:  "WALK",
	10: "CANCEL",
	14: "GETDIR",
	16: "STAT",
}
var Request_Verb_value = map[string]int32{
	"GET":    1,
	"SET":    2,
	"DEL":    3,
	"ESET":   4,
	"REV":    5,
	"WAIT":   6,
	"NOP":    7,
	"WATCH":  8,
	"WALK":   9,
	"CANCEL": 10,
	"GETDIR": 14,
	"STAT":   16,
}

func NewRequest_Verb(x int32) *Request_Verb {
	e := Request_Verb(x)
	return &e
}

type Response_Err int32

const (
	Response_OTHER        = 127
	Response_TAG_IN_USE   = 1
	Response_UNKNOWN_VERB = 2
	Response_REDIRECT     = 3
	Response_TOO_LATE     = 4
	Response_REV_MISMATCH = 5
	Response_BAD_PATH     = 6
	Response_MISSING_ARG  = 7
	Response_RANGE        = 8
	Response_NOTDIR       = 20
	Response_ISDIR        = 21
	Response_NOENT        = 22
)

var Response_Err_name = map[int32]string{
	127: "OTHER",
	1:   "TAG_IN_USE",
	2:   "UNKNOWN_VERB",
	3:   "REDIRECT",
	4:   "TOO_LATE",
	5:   "REV_MISMATCH",
	6:   "BAD_PATH",
	7:   "MISSING_ARG",
	8:   "RANGE",
	20:  "NOTDIR",
	21:  "ISDIR",
	22:  "NOENT",
}
var Response_Err_value = map[string]int32{
	"OTHER":        127,
	"TAG_IN_USE":   1,
	"UNKNOWN_VERB": 2,
	"REDIRECT":     3,
	"TOO_LATE":     4,
	"REV_MISMATCH": 5,
	"BAD_PATH":     6,
	"MISSING_ARG":  7,
	"RANGE":        8,
	"NOTDIR":       20,
	"ISDIR":        21,
	"NOENT":        22,
}

func NewResponse_Err(x int32) *Response_Err {
	e := Response_Err(x)
	return &e
}

type Request struct {
	Tag              *int32        "PB(varint,1,opt,name=tag)"
	Verb             *Request_Verb "PB(varint,2,opt,name=verb,enum=server.Request_Verb)"
	Path             *string       "PB(bytes,4,opt,name=path)"
	Value            []byte        "PB(bytes,5,opt,name=value)"
	OtherTag         *int32        "PB(varint,6,opt,name=other_tag)"
	Offset           *int32        "PB(varint,7,opt,name=offset)"
	Limit            *int32        "PB(varint,8,opt,name=limit)"
	Rev              *int64        "PB(varint,9,opt,name=rev)"
	XXX_unrecognized []byte
}

func (this *Request) Reset() {
	*this = Request{}
}

type Response struct {
	Tag              *int32        "PB(varint,1,opt,name=tag)"
	Flags            *int32        "PB(varint,2,opt,name=flags)"
	Rev              *int64        "PB(varint,3,opt,name=rev)"
	Path             *string       "PB(bytes,5,opt,name=path)"
	Value            []byte        "PB(bytes,6,opt,name=value)"
	Len              *int32        "PB(varint,8,opt,name=len)"
	ErrCode          *Response_Err "PB(varint,100,opt,name=err_code,enum=server.Response_Err)"
	ErrDetail        *string       "PB(bytes,101,opt,name=err_detail)"
	XXX_unrecognized []byte
}

func (this *Response) Reset() {
	*this = Response{}
}

func init() {
	proto.RegisterEnum("server.Request_Verb", Request_Verb_name, Request_Verb_value)
	proto.RegisterEnum("server.Response_Err", Response_Err_name, Response_Err_value)
}
